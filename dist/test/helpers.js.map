{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/test/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeFS } from '@yarnpkg/fslib';\nimport { exec as childProcessExec } from 'child_process';\nimport * as promisify from 'util.promisify';\nimport { sync as rimrafSync } from 'rimraf';\nimport { existsSync, readFileSync, unlinkSync, writeFileSync } from 'fs';\nimport { join, resolve } from 'path';\nimport * as fs from 'fs';\nimport { lock } from 'proper-lockfile';\nimport type { Readable } from 'stream';\n/**\n * types from ts-node under test\n */\nimport type * as tsNodeTypes from '../index';\nimport type _createRequire from 'create-require';\nimport { has, mapValues, once, sortBy } from 'lodash';\nimport semver = require('semver');\nimport type { ExecutionContext } from './testlib';\nconst createRequire: typeof _createRequire = require('create-require');\nexport { tsNodeTypes };\n\n//#region Paths\nexport const ROOT_DIR = resolve(__dirname, '../..');\nexport const DIST_DIR = resolve(__dirname, '..');\nexport const TEST_DIR = join(__dirname, '../../tests');\nexport const PROJECT = join(TEST_DIR, 'tsconfig.json');\nexport const PROJECT_TRANSPILE_ONLY = join(\n  TEST_DIR,\n  'tsconfig-transpile-only.json'\n);\nexport const BIN_PATH = join(TEST_DIR, 'node_modules/.bin/ts-node');\nexport const BIN_PATH_JS = join(TEST_DIR, 'node_modules/ts-node/dist/bin.js');\nexport const BIN_SCRIPT_PATH = join(\n  TEST_DIR,\n  'node_modules/.bin/ts-node-script'\n);\nexport const BIN_CWD_PATH = join(TEST_DIR, 'node_modules/.bin/ts-node-cwd');\nexport const BIN_ESM_PATH = join(TEST_DIR, 'node_modules/.bin/ts-node-esm');\n\nprocess.chdir(TEST_DIR);\n//#endregion\n\n//#region command lines\n/** Default `ts-node --project` invocation */\nexport const CMD_TS_NODE_WITH_PROJECT_FLAG = `\"${BIN_PATH}\" --project \"${PROJECT}\"`;\n/** Default `ts-node --project` invocation with transpile-only */\nexport const CMD_TS_NODE_WITH_PROJECT_TRANSPILE_ONLY_FLAG = `\"${BIN_PATH}\" --project \"${PROJECT_TRANSPILE_ONLY}\"`;\n/** Default `ts-node` invocation without `--project` */\nexport const CMD_TS_NODE_WITHOUT_PROJECT_FLAG = `\"${BIN_PATH}\"`;\nexport const EXPERIMENTAL_MODULES_FLAG = semver.gte(process.version, '12.17.0')\n  ? ''\n  : '--experimental-modules';\nexport const CMD_ESM_LOADER_WITHOUT_PROJECT = `node ${EXPERIMENTAL_MODULES_FLAG} --loader ts-node/esm`;\n//#endregion\n\n// `createRequire` does not exist on older node versions\nexport const testsDirRequire = createRequire(join(TEST_DIR, 'index.js'));\n\nexport const ts = testsDirRequire('typescript');\n\n//#region version checks\nexport const nodeSupportsEsmHooks = semver.gte(process.version, '12.16.0');\nexport const nodeSupportsSpawningChildProcess = semver.gte(\n  process.version,\n  '12.17.0'\n);\nexport const nodeUsesNewHooksApi = semver.gte(process.version, '16.12.0');\nexport const nodeSupportsImportAssertions =\n  (semver.gte(process.version, '16.14.0') &&\n    semver.lt(process.version, '17.0.0')) ||\n  semver.gte(process.version, '17.1.0');\nexport const nodeSupportsImportAssertionsTypeJson =\n  (semver.gte(process.version, '16.15.0') &&\n    semver.lt(process.version, '17.0.0')) ||\n  semver.gte(process.version, '17.5.0');\n// Node 14.13.0 has a bug where it tries to lex CJS files to discover named exports *before*\n// we transform the code.\n// In other words, it tries to parse raw TS as CJS and balks at `export const foo =`, expecting to see `exports.foo =`\n// This lexing only happens when CJS TS is imported from the ESM loader.\nexport const nodeSupportsImportingTransformedCjsFromEsm = semver.gte(\n  process.version,\n  '14.13.1'\n);\n/** Supports tsconfig \"extends\" >= v3.2.0 */\nexport const tsSupportsTsconfigInheritanceViaNodePackages = semver.gte(\n  ts.version,\n  '3.2.0'\n);\n/** Supports --showConfig: >= v3.2.0 */\nexport const tsSupportsShowConfig = semver.gte(ts.version, '3.2.0');\n/** Supports module:nodenext and module:node16 as *stable* features */\nexport const tsSupportsStableNodeNextNode16 =\n  ts.version.startsWith('4.7.') || semver.gte(ts.version, '4.7.0');\n// TS 4.5 is first version to understand .cts, .mts, .cjs, and .mjs extensions\nexport const tsSupportsMtsCtsExtensions = semver.gte(ts.version, '4.5.0');\n//#endregion\n\nexport const xfs = new NodeFS(fs);\n\n/** Pass to `test.context()` to get access to the ts-node API under test */\nexport const ctxTsNode = once(async () => {\n  await installTsNode();\n  const tsNodeUnderTest: typeof tsNodeTypes = testsDirRequire('ts-node');\n  return {\n    tsNodeUnderTest,\n  };\n});\nexport namespace ctxTsNode {\n  export type Ctx = Awaited<ReturnType<typeof ctxTsNode>>;\n  export type T = ExecutionContext<Ctx>;\n}\n\n//#region install ts-node tarball\nconst ts_node_install_lock = process.env.ts_node_install_lock as string;\nconst lockPath = join(__dirname, ts_node_install_lock);\n\ninterface InstallationResult {\n  error: string | null;\n}\n\n/**\n * Pack and install ts-node locally, necessary to test package \"exports\"\n * FS locking b/c tests run in separate processes\n */\nexport async function installTsNode() {\n  await lockedMemoizedOperation(lockPath, async () => {\n    const totalTries = process.platform === 'win32' ? 5 : 1;\n    let tries = 0;\n    while (true) {\n      try {\n        rimrafSync(join(TEST_DIR, 'node_modules'));\n        await promisify(childProcessExec)(`npm install`, { cwd: TEST_DIR });\n        const packageLockPath = join(TEST_DIR, 'package-lock.json');\n        existsSync(packageLockPath) && unlinkSync(packageLockPath);\n        break;\n      } catch (e) {\n        tries++;\n        if (tries >= totalTries) throw e;\n      }\n    }\n  });\n}\n\n/**\n * Attempt an operation once across multiple processes, using filesystem locking.\n * If it was executed already by another process, and it errored, throw the same error message.\n */\nasync function lockedMemoizedOperation(\n  lockPath: string,\n  operation: () => Promise<void>\n) {\n  const releaseLock = await lock(lockPath, {\n    realpath: false,\n    stale: 120e3,\n    retries: {\n      retries: 120,\n      maxTimeout: 1000,\n    },\n  });\n  try {\n    const operationHappened = existsSync(lockPath);\n    if (operationHappened) {\n      const result: InstallationResult = JSON.parse(\n        readFileSync(lockPath, 'utf8')\n      );\n      if (result.error) throw result.error;\n    } else {\n      const result: InstallationResult = { error: null };\n      try {\n        await operation();\n      } catch (e) {\n        result.error = `${e}`;\n        throw e;\n      } finally {\n        writeFileSync(lockPath, JSON.stringify(result));\n      }\n    }\n  } finally {\n    releaseLock();\n  }\n}\n//#endregion\n\n/**\n * Get a stream into a string.\n * Will resolve early if\n */\nexport function getStream(stream: Readable, waitForPattern?: string | RegExp) {\n  let resolve: (value: string) => void;\n  const promise = new Promise<string>((res) => {\n    resolve = res;\n  });\n  const received: Buffer[] = [];\n  let combinedBuffer: Buffer = Buffer.concat([]);\n  let combinedString: string = '';\n\n  stream.on('data', (data) => {\n    received.push(data);\n    combine();\n    if (\n      (typeof waitForPattern === 'string' &&\n        combinedString.indexOf(waitForPattern) >= 0) ||\n      (waitForPattern instanceof RegExp && combinedString.match(waitForPattern))\n    )\n      resolve(combinedString);\n    combinedBuffer = Buffer.concat(received);\n  });\n  stream.on('end', () => {\n    resolve(combinedString);\n  });\n\n  return promise;\n\n  function combine() {\n    combinedBuffer = Buffer.concat(received);\n    combinedString = combinedBuffer.toString('utf8');\n  }\n}\n\n//#region Reset node environment\n\nconst defaultRequireExtensions = captureObjectState(require.extensions);\n// Avoid node deprecation warning for accessing _channel\nconst defaultProcess = captureObjectState(process, ['_channel']);\nconst defaultModule = captureObjectState(require('module'));\nconst defaultError = captureObjectState(Error);\nconst defaultGlobal = captureObjectState(global);\n\n/**\n * Undo all of ts-node & co's installed hooks, resetting the node environment to default\n * so we can run multiple test cases which `.register()` ts-node.\n *\n * Must also play nice with `nyc`'s environmental mutations.\n */\nexport function resetNodeEnvironment() {\n  const sms =\n    require('@cspotcode/source-map-support') as typeof import('@cspotcode/source-map-support');\n  // We must uninstall so that it resets its internal state; otherwise it won't know it needs to reinstall in the next test.\n  sms.uninstall();\n  // Must remove handlers to avoid a memory leak\n  sms.resetRetrieveHandlers();\n\n  // Modified by ts-node hooks\n  resetObject(\n    require.extensions,\n    defaultRequireExtensions,\n    undefined,\n    undefined,\n    undefined,\n    true\n  );\n\n  // ts-node attaches a property when it registers an instance\n  // source-map-support monkey-patches the emit function\n  // Avoid node deprecation warnings for setting process.config or accessing _channel\n  resetObject(process, defaultProcess, undefined, ['_channel'], ['config']);\n\n  // source-map-support swaps out the prepareStackTrace function\n  resetObject(Error, defaultError);\n\n  // _resolveFilename et.al. are modified by ts-node, tsconfig-paths, source-map-support, yarn, maybe other things?\n  resetObject(require('module'), defaultModule, undefined, ['wrap', 'wrapper']);\n\n  // May be modified by REPL tests, since the REPL sets globals.\n  // Avoid deleting nyc's coverage data.\n  resetObject(global, defaultGlobal, ['__coverage__']);\n\n  // Reset our ESM hooks\n  process.__test_setloader__?.(undefined);\n}\n\nfunction captureObjectState(object: any, avoidGetters: string[] = []) {\n  const descriptors = Object.getOwnPropertyDescriptors(object);\n  const values = mapValues(descriptors, (_d, key) => {\n    if (avoidGetters.includes(key)) return descriptors[key].value;\n    return object[key];\n  });\n  return {\n    descriptors,\n    values,\n  };\n}\n// Redefine all property descriptors and delete any new properties\nfunction resetObject(\n  object: any,\n  state: ReturnType<typeof captureObjectState>,\n  doNotDeleteTheseKeys: string[] = [],\n  doNotSetTheseKeys: true | string[] = [],\n  avoidSetterIfUnchanged: string[] = [],\n  reorderProperties = false\n) {\n  const currentDescriptors = Object.getOwnPropertyDescriptors(object);\n  for (const key of Object.keys(currentDescriptors)) {\n    if (doNotDeleteTheseKeys.includes(key)) continue;\n    if (has(state.descriptors, key)) continue;\n    delete object[key];\n  }\n  // Trigger nyc's setter functions\n  for (const [key, value] of Object.entries(state.values)) {\n    try {\n      if (doNotSetTheseKeys === true || doNotSetTheseKeys.includes(key))\n        continue;\n      if (avoidSetterIfUnchanged.includes(key) && object[key] === value)\n        continue;\n      state.descriptors[key].set?.call(object, value);\n    } catch {}\n  }\n  // Reset descriptors\n  Object.defineProperties(object, state.descriptors);\n\n  if (reorderProperties) {\n    // Delete and re-define each property so that they are in original order\n    const originalOrder = Object.keys(state.descriptors);\n    const properties = Object.getOwnPropertyDescriptors(object);\n    const sortedKeys = sortBy(Object.keys(properties), (name) =>\n      originalOrder.includes(name) ? originalOrder.indexOf(name) : 999\n    );\n    for (const key of sortedKeys) {\n      delete object[key];\n      Object.defineProperty(object, key, properties[key]);\n    }\n  }\n}\n\n//#endregion\n\nexport const delay = promisify(setTimeout);\n\n/** Essentially Array:includes, but with tweaked types for checks on enums */\nexport function isOneOf<V>(value: V, arrayOfPossibilities: ReadonlyArray<V>) {\n  return arrayOfPossibilities.includes(value as any);\n}\n"]}