{"version":3,"file":"regression.spec.js","sourceRoot":"","sources":["../../src/test/regression.spec.ts"],"names":[],"mappings":";AAAA,kEAAkE;;AAElE,8BAA8B;AAC9B,+BAA4B;AAC5B,iDAA8D;AAC9D,uCAImB;AACnB,uCAAoC;AAEpC,MAAM,IAAI,GAAG,IAAA,iBAAO,EAAC,mBAAS,CAAC,CAAC;AAChC,MAAM,IAAI,GAAG,IAAA,+BAAgB,EAAC;IAC5B,IAAI,EAAE,IAAA,yBAAU,EAAC;QACf,GAAG,EAAE,kBAAQ;KACd,CAAC;CACH,CAAC,CAAC;AAEH,IAAI,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;IACvC,gCAAgC;IAChC,sBAAsB;IACtB,yHAAyH;IACzH,sCAAsC;IACtC,6DAA6D;IAC7D,2HAA2H;IAC3H,iDAAiD;IAEjD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC;QACpC,IAAI,EAAE,IAAA,yBAAU,EAAC;YACf,GAAG,EAAE,IAAA,WAAI,EAAC,kBAAQ,EAAE,MAAM,CAAC;SAC5B,CAAC;QACF,GAAG,EAAE,GAAG,0CAAgC,aAAa;KACtD,CAAC,CAAC;IAEH,uIAAuI;IACvI,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAoB;IAC/C,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,yBAAyB;AACjD,CAAC,CAAC,CAAC","sourcesContent":["// Misc regression tests go here if they do not have a better home\n\nimport * as exp from 'expect';\nimport { join } from 'path';\nimport { createExec, createExecTester } from './exec-helpers';\nimport {\n  CMD_TS_NODE_WITHOUT_PROJECT_FLAG,\n  ctxTsNode,\n  TEST_DIR,\n} from './helpers';\nimport { context } from './testlib';\n\nconst test = context(ctxTsNode);\nconst exec = createExecTester({\n  exec: createExec({\n    cwd: TEST_DIR,\n  }),\n});\n\ntest('#1488 regression test', async () => {\n  // Scenario that caused the bug:\n  // `allowJs` turned on\n  // `skipIgnore` turned on so that ts-node tries to compile itself (not ideal but theoretically we should be ok with this)\n  // Attempt to `require()` a `.js` file\n  // `assertScriptCanLoadAsCJS` is triggered within `require()`\n  // `./package.json` needs to be fetched into cache via `assertScriptCanLoadAsCJS` which caused a recursive `require()` call\n  // Circular dependency warning is emitted by node\n\n  const { stdout, stderr } = await exec({\n    exec: createExec({\n      cwd: join(TEST_DIR, '1488'),\n    }),\n    cmd: `${CMD_TS_NODE_WITHOUT_PROJECT_FLAG} ./index.js`,\n  });\n\n  // Assert that we do *not* get `Warning: Accessing non-existent property 'getOptionValue' of module exports inside circular dependency`\n  exp(stdout).toBe('foo\\n'); // prove that it ran\n  exp(stderr).toBe(''); // prove that no warnings\n});\n"]}