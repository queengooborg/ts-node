{"version":3,"file":"node-repl-tla.js","sourceRoot":"","sources":["../../../src/test/repl/node-repl-tla.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from '../testlib';\nimport type { Key } from 'readline';\nimport { Stream } from 'stream';\nimport semver = require('semver');\nimport { ts } from '../helpers';\nimport type { ctxTsNode } from '../helpers';\nimport { nodeSupportsEsmHooks } from '../helpers';\n\ninterface SharedObjects extends ctxTsNode.Ctx {\n  TEST_DIR: string;\n}\n\n// Based on https://github.com/nodejs/node/blob/88799930794045795e8abac874730f9eba7e2300/test/parallel/test-repl-top-level-await.js\nexport async function upstreamTopLevelAwaitTests({\n  TEST_DIR,\n  tsNodeUnderTest,\n}: SharedObjects) {\n  const PROMPT = 'await repl > ';\n\n  const putIn = new REPLStream();\n  const replService = tsNodeUnderTest.createRepl({\n    // @ts-ignore\n    stdin: putIn,\n    // @ts-ignore\n    stdout: putIn,\n    // @ts-ignore\n    stderr: putIn,\n  });\n  const service = tsNodeUnderTest.create({\n    ...replService.evalAwarePartialHost,\n    project: `${TEST_DIR}/tsconfig.json`,\n    experimentalReplAwait: true,\n    transpileOnly: true,\n    compilerOptions: {\n      target: semver.gte(ts.version, '3.0.1')\n        ? 'es2018'\n        : // TS 2.7 is using polyfill for async interator even though they\n          // were added in es2018\n          'esnext',\n    },\n  });\n  replService.setService(service);\n  (\n    replService.stdout as NodeJS.WritableStream & {\n      isTTY: boolean;\n    }\n  ).isTTY = true;\n  const replServer = replService.startInternal({\n    prompt: PROMPT,\n    terminal: true,\n    useColors: true,\n    useGlobal: false,\n  });\n\n  function runAndWait(cmds: Array<string | Key>) {\n    const promise = putIn.wait();\n    for (const cmd of cmds) {\n      if (typeof cmd === 'string') {\n        putIn.run([cmd]);\n      } else {\n        replServer.write('', cmd);\n      }\n    }\n    return promise;\n  }\n\n  await runAndWait([\n    'function foo(x) { return x; }',\n    'function koo() { return Promise.resolve(4); }',\n  ]);\n\n  const testCases = [\n    ['await Promise.resolve(0)', '0'],\n\n    // issue: { a: await Promise.resolve(1) } is being interpreted as a block\n    // remove surrounding parenthesis once issue is fixed\n    ['({ a: await Promise.resolve(1) })', '{ a: 1 }'],\n\n    ['_', '{ a: 1 }'],\n    ['let { aa, bb } = await Promise.resolve({ aa: 1, bb: 2 }), f = 5;'],\n    ['aa', '1'],\n    ['bb', '2'],\n    ['f', '5'],\n    ['let cc = await Promise.resolve(2)'],\n    ['cc', '2'],\n    ['let dd;'],\n    ['dd'],\n    ['let [ii, { abc: { kk } }] = [0, { abc: { kk: 1 } }];'],\n    ['ii', '0'],\n    ['kk', '1'],\n    ['var ll = await Promise.resolve(2);'],\n    ['ll', '2'],\n    ['foo(await koo())', '4'],\n    ['_', '4'],\n    ['const m = foo(await koo());'],\n    ['m', '4'],\n\n    // issue: REPL doesn't recognize end of input\n    // compile is returning TS1005 after second line even though\n    // it's valid syntax\n    // [\n    //   'const n = foo(await\\nkoo());',\n    //   ['const n = foo(await\\r', '... koo());\\r', 'undefined'],\n    // ],\n\n    [\n      '`status: ${(await Promise.resolve({ status: 200 })).status}`',\n      \"'status: 200'\",\n    ],\n    ['for (let i = 0; i < 2; ++i) await i'],\n    ['for (let i = 0; i < 2; ++i) { await i }'],\n    ['await 0', '0'],\n    ['await 0; function foo() {}'],\n    ['foo', '[Function: foo]'],\n    ['class Foo {}; await 1;', '1'],\n\n    [\n      'Foo',\n      // Adjusted since ts-node supports older versions of node\n      semver.gte(process.version, '12.18.0')\n        ? '[class Foo]'\n        : '[Function: Foo]',\n    ],\n    ['if (await true) { function fooz() {}; }'],\n    ['fooz', '[Function: fooz]'],\n    ['if (await true) { class Bar {}; }'],\n\n    [\n      'Bar',\n      // Adjusted since ts-node supports older versions of node\n      nodeSupportsEsmHooks\n        ? 'Uncaught ReferenceError: Bar is not defined'\n        : 'ReferenceError: Bar is not defined',\n      // Line increased due to TS added lines\n      {\n        line: nodeSupportsEsmHooks ? 4 : 5,\n      },\n    ],\n\n    ['await 0; function* gen(){}'],\n    ['for (var i = 0; i < 10; ++i) { await i; }'],\n    ['i', '10'],\n    ['for (let j = 0; j < 5; ++j) { await j; }'],\n\n    [\n      'j',\n      // Adjusted since ts-node supports older versions of node\n      nodeSupportsEsmHooks\n        ? 'Uncaught ReferenceError: j is not defined'\n        : 'ReferenceError: j is not defined',\n      // Line increased due to TS added lines\n      {\n        line: nodeSupportsEsmHooks ? 4 : 5,\n      },\n    ],\n\n    ['gen', '[GeneratorFunction: gen]'],\n\n    [\n      'return 42; await 5;',\n      // Adjusted since ts-node supports older versions of node\n      nodeSupportsEsmHooks\n        ? 'Uncaught SyntaxError: Illegal return statement'\n        : 'SyntaxError: Illegal return statement',\n      // Line increased due to TS added lines\n      {\n        line: nodeSupportsEsmHooks ? 4 : 5,\n      },\n    ],\n\n    ['let o = await 1, p'],\n    ['p'],\n    ['let q = 1, s = await 2'],\n    ['s', '2'],\n    [\n      'for await (let i of [1,2,3]) console.log(i)',\n      [\n        'for await (let i of [1,2,3]) console.log(i)\\r',\n        '1',\n        '2',\n        '3',\n        'undefined',\n      ],\n    ],\n\n    // issue: REPL is expecting more input to finish execution\n    // compiler is returning TS1003 error\n    // [\n    //   'await Promise..resolve()',\n    //   [\n    //     'await Promise..resolve()\\r',\n    //     'Uncaught SyntaxError: ',\n    //     'await Promise..resolve()',\n    //     '              ^',\n    //     '',\n    //     \"Unexpected token '.'\",\n    //   ],\n    // ],\n\n    [\n      'for (const x of [1,2,3]) {\\nawait x\\n}',\n      ['for (const x of [1,2,3]) {\\r', '... await x\\r', '... }\\r', 'undefined'],\n    ],\n    [\n      'for (const x of [1,2,3]) {\\nawait x;\\n}',\n      [\n        'for (const x of [1,2,3]) {\\r',\n        '... await x;\\r',\n        '... }\\r',\n        'undefined',\n      ],\n    ],\n    [\n      'for await (const x of [1,2,3]) {\\nconsole.log(x)\\n}',\n      [\n        'for await (const x of [1,2,3]) {\\r',\n        '... console.log(x)\\r',\n        '... }\\r',\n        '1',\n        '2',\n        '3',\n        'undefined',\n      ],\n    ],\n    [\n      'for await (const x of [1,2,3]) {\\nconsole.log(x);\\n}',\n      [\n        'for await (const x of [1,2,3]) {\\r',\n        '... console.log(x);\\r',\n        '... }\\r',\n        '1',\n        '2',\n        '3',\n        'undefined',\n      ],\n    ],\n  ] as const;\n\n  for (const [\n    input,\n    expected = [`${input}\\r`],\n    options = {} as { line?: number },\n  ] of testCases) {\n    const toBeRun = input.split('\\n');\n    const lines = await runAndWait(toBeRun);\n    if (Array.isArray(expected)) {\n      if (expected.length === 1) expected.push('undefined');\n      if (lines[0] === input) lines.shift();\n      expect(lines).toEqual([...expected, PROMPT]);\n    } else if ('line' in options) {\n      expect(lines[toBeRun.length + options.line!]).toEqual(expected);\n    } else {\n      const echoed = toBeRun.map((a, i) => `${i > 0 ? '... ' : ''}${a}\\r`);\n      expect(lines).toEqual([...echoed, expected, PROMPT]);\n    }\n  }\n}\n\n// copied from https://github.com/nodejs/node/blob/88799930794045795e8abac874730f9eba7e2300/lib/internal/util/inspect.js#L220-L227\n// Regex used for ansi escape code splitting\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\n// License: MIT, authors: @sindresorhus, Qix-, arjunmehta and LitoMore\n// Matches all ansi escape code sequences in a string\nconst ansiPattern =\n  '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\n  '(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\n  '|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\nconst ansi = new RegExp(ansiPattern, 'g');\n\n// copied from https://github.com/nodejs/node/blob/88799930794045795e8abac874730f9eba7e2300/lib/internal/util/inspect.js#L2112-L2117\n/**\n * Remove all VT control characters. Use to estimate displayed string width.\n */\nfunction stripVTControlCharacters(str: string) {\n  return str.replace(ansi, '');\n}\n\n// copied from https://github.com/nodejs/node/blob/88799930794045795e8abac874730f9eba7e2300/test/parallel/test-repl-top-level-await.js\nclass ArrayStream extends Stream {\n  readable = true;\n  writable = true;\n\n  run(data: string[]) {\n    data.forEach((line) => {\n      this.emit('data', `${line}\\n`);\n    });\n  }\n\n  pause() {}\n  resume() {}\n  write(_chunk: Buffer | string, _encoding: string, _callback: () => {}) {}\n}\n\nexport class REPLStream extends ArrayStream {\n  waitingForResponse = false;\n  lines = [''];\n\n  constructor() {\n    super();\n  }\n\n  write(chunk: Buffer | string, encoding: string, callback: () => void) {\n    if (Buffer.isBuffer(chunk)) {\n      chunk = chunk.toString(encoding);\n    }\n    const chunkLines = stripVTControlCharacters(chunk).split('\\n');\n    this.lines[this.lines.length - 1] += chunkLines[0];\n    if (chunkLines.length > 1) {\n      this.lines.push(...chunkLines.slice(1));\n    }\n    this.emit('line');\n    if (callback) callback();\n    return true;\n  }\n\n  wait(): Promise<string[]> {\n    if (this.waitingForResponse) {\n      throw new Error('Currently waiting for response to another command');\n    }\n    this.lines = [''];\n    return new Promise((resolve, reject) => {\n      const onError = (err: any) => {\n        this.removeListener('line', onLine);\n        reject(err);\n      };\n      const onLine = () => {\n        if (this.lines[this.lines.length - 1].includes('> ')) {\n          this.removeListener('error', onError);\n          this.removeListener('line', onLine);\n          resolve(this.lines);\n        }\n      };\n      this.once('error', onError);\n      this.on('line', onLine);\n    });\n  }\n}\n"]}