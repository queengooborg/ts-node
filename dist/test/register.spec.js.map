{"version":3,"file":"register.spec.js","sourceRoot":"","sources":["../../src/test/register.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { once } from 'lodash';\nimport {\n  ctxTsNode,\n  PROJECT_TRANSPILE_ONLY,\n  resetNodeEnvironment,\n  TEST_DIR,\n  tsNodeTypes,\n} from './helpers';\nimport { context, expect } from './testlib';\nimport * as exp from 'expect';\nimport { join, resolve } from 'path';\nimport proxyquire = require('proxyquire');\n\nconst SOURCE_MAP_REGEXP =\n  /\\/\\/# sourceMappingURL=data:application\\/json;charset=utf\\-8;base64,[\\w\\+]+=*$/;\n\nconst createOptions: tsNodeTypes.CreateOptions = {\n  project: PROJECT_TRANSPILE_ONLY,\n  compilerOptions: {\n    jsx: 'preserve',\n  },\n};\n\nconst test = context(ctxTsNode).context(\n  once(async (t) => {\n    return {\n      moduleTestPath: resolve(__dirname, '../../tests/module.ts'),\n      service: t.context.tsNodeUnderTest.create(createOptions),\n    };\n  })\n);\ntest.beforeEach(async (t) => {\n  // Un-install all hook and remove our test module from cache\n  resetNodeEnvironment();\n  delete require.cache[t.context.moduleTestPath];\n  // Paranoid check that we are truly uninstalled\n  exp(() => require(t.context.moduleTestPath)).toThrow(\n    \"Unexpected token 'export'\"\n  );\n});\ntest.runSerially();\n\ntest('create() does not register()', async (t) => {\n  // nyc sets its own `require.extensions` hooks; to truly detect if we're\n  // installed we must attempt to load a TS file\n  t.context.tsNodeUnderTest.create(createOptions);\n  // This error indicates node attempted to run the code as .js\n  exp(() => require(t.context.moduleTestPath)).toThrow(\n    \"Unexpected token 'export'\"\n  );\n});\n\ntest('register(options) is shorthand for register(create(options))', (t) => {\n  t.context.tsNodeUnderTest.register(createOptions);\n  require(t.context.moduleTestPath);\n});\n\ntest('register(service) registers a previously-created service', (t) => {\n  t.context.tsNodeUnderTest.register(t.context.service);\n  require(t.context.moduleTestPath);\n});\n\ntest.suite('register(create(options))', (test) => {\n  test.beforeEach(async (t) => {\n    // Re-enable project for every test.\n    t.context.service.enabled(true);\n    t.context.tsNodeUnderTest.register(t.context.service);\n    t.context.service.installSourceMapSupport();\n  });\n\n  test('should be able to require typescript', ({\n    context: { moduleTestPath },\n  }) => {\n    const m = require(moduleTestPath);\n\n    expect(m.example('foo')).toBe('FOO');\n  });\n\n  test('should support dynamically disabling', ({\n    context: { service, moduleTestPath },\n  }) => {\n    delete require.cache[moduleTestPath];\n\n    expect(service.enabled(false)).toBe(false);\n    expect(() => require(moduleTestPath)).toThrow(/Unexpected token/);\n\n    delete require.cache[moduleTestPath];\n\n    expect(service.enabled()).toBe(false);\n    expect(() => require(moduleTestPath)).toThrow(/Unexpected token/);\n\n    delete require.cache[moduleTestPath];\n\n    expect(service.enabled(true)).toBe(true);\n    expect(() => require(moduleTestPath)).not.toThrow();\n\n    delete require.cache[moduleTestPath];\n\n    expect(service.enabled()).toBe(true);\n    expect(() => require(moduleTestPath)).not.toThrow();\n  });\n\n  test('should compile through js and ts', () => {\n    const m = require('../../tests/complex');\n\n    expect(m.example()).toBe('example');\n  });\n\n  test('should work with proxyquire', () => {\n    const m = proxyquire('../../tests/complex', {\n      './example': 'hello',\n    });\n\n    expect(m.example()).toBe('hello');\n  });\n\n  test('should work with `require.cache`', () => {\n    const { example1, example2 } = require('../../tests/require-cache');\n\n    expect(example1).not.toBe(example2);\n  });\n\n  test('should use source maps', async () => {\n    try {\n      require('../../tests/throw error');\n    } catch (error: any) {\n      exp(error.stack).toMatch(\n        [\n          'Error: this is a demo',\n          `    at Foo.bar (${join(TEST_DIR, './throw error.ts')}:100:17)`,\n        ].join('\\n')\n      );\n    }\n  });\n\n  test.suite('JSX preserve', (test) => {\n    let compiled: string;\n\n    test.beforeAll(async () => {\n      const old = require.extensions['.tsx']!;\n      require.extensions['.tsx'] = (m: any, fileName) => {\n        const _compile = m._compile;\n\n        m._compile = function (code: string, fileName: string) {\n          compiled = code;\n          return _compile.call(this, code, fileName);\n        };\n\n        return old(m, fileName);\n      };\n    });\n\n    test('should use source maps', async (t) => {\n      try {\n        require('../../tests/with-jsx.tsx');\n      } catch (error: any) {\n        expect(error.stack).toMatch('SyntaxError: Unexpected token');\n      }\n\n      expect(compiled).toMatch(SOURCE_MAP_REGEXP);\n    });\n  });\n});\n\ntest('should support compiler scopes w/multiple registered compiler services at once', (t) => {\n  const { moduleTestPath, tsNodeUnderTest } = t.context;\n  const calls: string[] = [];\n\n  const compilers = [\n    tsNodeUnderTest.register({\n      projectSearchDir: join(TEST_DIR, 'scope/a'),\n      scopeDir: join(TEST_DIR, 'scope/a'),\n      scope: true,\n    }),\n    tsNodeUnderTest.register({\n      projectSearchDir: join(TEST_DIR, 'scope/a'),\n      scopeDir: join(TEST_DIR, 'scope/b'),\n      scope: true,\n    }),\n  ];\n\n  compilers.forEach((c) => {\n    const old = c.compile;\n    c.compile = (code, fileName, lineOffset) => {\n      calls.push(fileName);\n\n      return old(code, fileName, lineOffset);\n    };\n  });\n\n  try {\n    expect(require('../../tests/scope/a').ext).toBe('.ts');\n    expect(require('../../tests/scope/b').ext).toBe('.ts');\n  } finally {\n    compilers.forEach((c) => c.enabled(false));\n  }\n\n  expect(calls).toEqual([\n    join(TEST_DIR, 'scope/a/index.ts'),\n    join(TEST_DIR, 'scope/b/index.ts'),\n  ]);\n\n  delete require.cache[moduleTestPath];\n\n  expect(() => require(moduleTestPath)).toThrow();\n});\n"]}